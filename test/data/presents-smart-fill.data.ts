import { TestStructuralElements } from "../all-data-tests.js";
import { RegisterTest } from "../framework.js";

export const data = (
  registerTest: RegisterTest,
  { describe }: TestStructuralElements
) => {
  describe("Present Smart-Fill", () => {
    registerTest(
      `Basic Test`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │.  1 │     │     │ B   │.  1 │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │.  1 │     │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │>E1  │     │.  1 │ B   │.1   │.1   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  p  │>P2  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │ B   │>P3  │  p  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │     │     │ B   │*1 1 │*1 1 │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );

    registerTest(
      "Correctly smart fill based on diagonal data",
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ P   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │ S   │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │*  1 │     │     │ B   │*  1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │*  1 │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ P   │  p  │  s  │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │  p  │>P   │  s  │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │*  1 │     │     │ B   │ S   │  s  │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
    );

    registerTest(
      "Correctly smart fill based on horizontal line with one side blocked",
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ P   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │ S   │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │*  1 │     │     │ B   │*  1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │*  1 │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ P   │  p  │  s  │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │>P   │  p  │  s  │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │*  1 │     │     │ B   │ S   │  s  │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
    );

    registerTest(
      "Correctly smart fill based on vertical line with one side blocked",
      `
        ┌─────┬─────┬─────┬─────┬─────┬─────┐
        │ S   │     │     │     │     │     │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │     │     │ B   │     │     │     │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │     │     │     │     │ B   │     │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │     │     │     │     │     │ B   │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │     │ B   │     │     │ P   │     │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │     │     │     │ B   │     │     │
        └─────┴─────┴─────┴─────┴─────┴─────┘
      `,
      `
        ┌─────┬─────┬─────┬─────┬─────┬─────┐
        │ S   │  s  │     │     │     │     │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │  s  │  s  │ B   │     │     │     │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │  s  │  s  │     │     │ B   │     │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │     │     │     │  p  │  p  │ B   │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │     │ B   │     │>P   │ P   │     │
        ├─────┼─────┼─────┼─────┼─────┼─────┤
        │     │     │     │ B   │     │     │
        └─────┴─────┴─────┴─────┴─────┴─────┘
      `
    );

    registerTest(
      "Correctly smart fill against top-left edge",
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │ B   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ S   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ S   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │>P   │  p  │ B   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │  p  │  p  │ B   │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │ S   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │  s  │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ S   │  s  │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
      [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
    `
    );
    registerTest(
      "Correctly smart fill against top-right edge",
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │ B   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ S   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ S   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │ B   │     │  p  │>P   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │  p  │  p  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │ S   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │  s  │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ S   │  s  │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
      [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
    `
    );
    registerTest(
      "Correctly smart fill against bottom-left edge",
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │ B   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ S   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ S   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │ B   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │ S   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │  s  │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │  p  │  p  │ S   │  s  │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │>P   │  p  │ B   │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
      [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
    `
    );
    registerTest(
      "Correctly smart fill against bottom-right edge",
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │ B   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ S   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ S   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │ B   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │ S   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │  s  │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ S   │  s  │  p  │  p  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ B   │ B   │  p  │>P   │
      └─────┴─────┴─────┴─────┴─────┴─────┘
      [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
    `
    );
  });
};
