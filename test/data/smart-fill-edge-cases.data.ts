import { TestStructuralElements } from "../all-data-tests.js";
import { RegisterTest, TestTag } from "../framework.js";

export const data = (
  registerTest: RegisterTest,
  { describe }: TestStructuralElements
) => {
  describe("Smart-fill Edge cases", () => {
    registerTest(
      `Present smart-fill invalidates candidates for Sword`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ID C
      ## 2
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │.  1 │     │     │ B   │.  1 │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │.  1 │     │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │.  1 │ B   │.1   │.1   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  p  │  p  │*2   │*2   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │ B   │>P   │  p  │*2   │*2   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │     │     │ B   │.1 1 │.1 1 │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
    registerTest(
      `Sword smart-fill invalidates candidates for Present`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ E   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │ S   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │ E   │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ID C
      ## 2
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │ B   │.  1 │ E   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │. 1  │* 2  │. 1  │ B   │     │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │. 1  │* 2  │. 1  │  s  │  s  │ S   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │ B   │.  1 │  s  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │ E   │.  1 │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
    registerTest(
      `Sword smart-fill invalidates candidates for Present, leads to solved Present`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ E   │ B   │     │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ E   │     │ B   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ID D↓
      ## 1
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │ B   │?f  1│ E   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ E   │     │ B   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │?f  1│ B   │  s  │  s  │?f  1│     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │  p  │  s  │>S   │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │  p  │  s  │  s  │?f  1│     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
    );
    registerTest(
      `Sword smart-fill invalidates candidates for Present, leading to fully solved board`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ID C
      ## 1
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │?f  1│  p  │  p  │ B   │?f  1│
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │  p  │  p  │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │?f  1│ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │  s  │  s  │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │  s  │>S   │  s  │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │?f  1│     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
    registerTest(
      `Present smart-fill invalidates candidates for Sword, leads to solved Sword`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ E   │ B   │     │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │ B   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ID D↓
      ## 1
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │?f  1│     │ B   │?f  1│     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ E   │ B   │     │ E   │?f  1│
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │  s  │  s  │ B   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │  s  │  s  │  s  │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │?f  1│     │  p  │  p  │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │>P   │  p  │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
    registerTest(
      `Present smart-fill invalidates candidates for Sword, leading to fully solved board`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ID C
      ## 1
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │?f  1│     │     │ B   │?f  1│
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │>P   │  p  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │?f  1│ B   │  p  │  p  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  s  │  s  │  s  │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │  s  │  s  │  s  │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │?f  1│     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
  });
  registerTest(
    `Out-of-bounds should be ignored when calculating valid spots`,
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ F   │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │ E   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │ E   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
    `
    ID A
    ## 1
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │>P   │  p  │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │  p  │ B   │ F   │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │ E   │  s  │  s  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │  s  │  s  │ E   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │  s  │  s  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
  );

  registerTest(
    `Missed tiles leading to only one pattern should auto-solve the full board`,
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │ E   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
    `
    ID C
    ## 1
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │?f  1│     │     │ B   │?f  1│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │>E   │  p  │  p  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │?f  1│ B   │  p  │  p  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │  s  │  s  │  s  │ E   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │  s  │  s  │  s  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │?f  1│     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
  );

  registerTest(
    `Suggested target should constrain itself to known patterns`,
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │ S   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
    `
    ID C
    ## 4
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │.  2 │     │     │     │  b  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │.  2 │     │.2  s│.2  s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │. 2  │. 2  │     │  b  │  s  │>S   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │. 2  │. 2  │. 1  │. 12 │ S   │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  2 │ B   │. 1  │. 12 │.21 s│.21 s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │.  2 │     │  b  │. 12 │. 12 │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
  );

  registerTest(
    {
      title: `Suggestions should constrain themselves to known patterns`,
      tags: [TestTag.InvalidUIState],
    },
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │     │     │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ P   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
    `
    ID C
    ## 4
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │.  1 │.  1 │     │     │ B   │.  1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  1 │ B   │.  1 │     │.1 1s│.1  s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │  p  │.  1 │ B   │.2  s│.2 1s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │ P   │     │.1 1s│>S ! │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  1 │ B   │.  1 │.1 1s│.3  s│.3  s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  1 │.  1 │     │ B   │.1 1s│.1 1s│
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
  );

  registerTest(
    `Shapes with smart-fill information (sword/presents) but no user-entered tiles for that shape should trigger suggestions within the smart-fill area instead of showing smart-fill`,
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ P   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
    `
    ID C
    ## 4
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │.  1 │.  1 │     │     │ B   │.  1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  1 │ B   │.  1 │     │.1 1 │.1   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │>P   │  p  │.  1 │ B   │.2   │.2 1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │ P   │     │.1 1 │*4   │*4   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  1 │ B   │.  1 │.1 1 │.3   │.3   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  1 │.  1 │     │ B   │.1 1 │.1 1 │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
  );
  registerTest(
    {
      title: `Shapes with smart-fill information (sword/presents) should not be shown when in the fill-mode for the other shape (filling presents)`,
      tags: [TestTag.InvalidUIState],
    },
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
    `
    ID C
    ## 6
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │.  1 │.  1 │     │     │ B   │.  1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  2 │ B   │.  2 │     │.1 2 │.1   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │. 4 p│  p  │. 21p│ B   │.2   │.2 2 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │. 4 p│>P ! │. 2 p│.2 1 │.6   │.6   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  2 │ B   │.  2 │.2 1 │.5   │.5   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  1 │.  1 │     │ B   │.2 2 │.2 2 │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
  );
  registerTest(
    {
      title: `Suggestions should be displayed correctly when two incomplete shapes are present due to user input (prioritizes Sword fill)`,
      tags: [TestTag.InvalidUIState],
    },
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ B   │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ P   │     │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
    `
    ID D→
    ## 2
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │ B   │     │     │.  1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ B   │     │.1  s│.1  s│.1  s│.  1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │.  1 │ B   │.1 1s│.1 1s│>S ! │.1 1s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │. 1  │ P   │. 1  │ B   │.1  s│.1  s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │. 11 │  p  │. 11 │     │.1  s│.1  s│
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
  );
};
