import { TestStructuralElements } from "../all-data-tests.js";
import { RegisterTest } from "../framework.js";

export const data = (
  registerTest: RegisterTest,
  { describe }: TestStructuralElements
) => {
  describe("Smart-fill Edge cases", () => {
    registerTest(
      `Present smart-fill invalidates candidates for Sword`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │.  1 │     │     │ B   │.  1 │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │.  1 │     │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │.  1 │ B   │.1   │.1   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │  p  │  p  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │ B   │>P   │  p  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │     │     │ B   │*1 1 │*1 1 │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
    registerTest(
      `Sword smart-fill invalidates candidates for Present`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ E   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │ E   │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │ B   │.  1 │ E   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │* 1  │  p  │* 1  │ B   │     │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │* 1  │  p  │* 1  │  s  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  1 │ B   │.  1 │  s  │  s  │>S   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │ E   │.  1 │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
    registerTest(
      `Sword smart-fill invalidates candidates for Present, leads to solved Present`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ B   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ E   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ B   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │  p  │  p  │ E   │*1  s│*1  s│     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │  p  │  p  │*1  s│  s  │  s  │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │*1  s│>S   │  s  │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
      [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
    `
    );
    registerTest(
      `Sword smart-fill invalidates candidates for Present, leading to fully solved board`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ E   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ E   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │  p  │  p  │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │  p  │  p  │  s  │  s  │  s  │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │  s  │>S   │  s  │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
    registerTest(
      `Present smart-fill invalidates candidates for Sword, leads to solved Sword`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ B   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ E   │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ B   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │ E   │  s  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │  s  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │>P   │  p  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │  p  │  p  │
      └─────┴─────┴─────┴─────┴─────┴─────┘
      [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
    `
    );
    // test(`Present smart-fill invalidates candidates for Sword, leads to solved Sword`, async (args) => {
    //   await run(args,
    //     `
    //   ┌─────┬─────┬─────┬─────┬─────┬─────┐
    //   │     │     │     │     │ B   │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │ B   │     │ B   │ E   │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │     │ E   │     │     │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │     │     │     │     │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │ B   │     │     │     │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │     │     │ B   │     │     │
    //   └─────┴─────┴─────┴─────┴─────┴─────┘
    // `,
    //     `
    //   ┌─────┬─────┬─────┬─────┬─────┬─────┐
    //   │     │     │     │     │ B   │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │ B   │     │ B   │ E   │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │     │ E   │     │     │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │     │     │     │     │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │ B   │     │     │     │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │     │     │ B   │     │     │
    //   └─────┴─────┴─────┴─────┴─────┴─────┘
    //   [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
    // `
    //   );
    // });
    registerTest(
      `Present smart-fill invalidates candidates for Sword, leading to fully solved board`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ E   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │ E   │ E   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │  p  │  p  │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │>P   │  p  │  s  │  s  │  s  │ E   │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │  s  │  s  │  s  │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
  });
  registerTest(
    `Out-of-bounds should be ignored when calculating valid spots`,
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │ E   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │ E   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ F   │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │>P   │  p  │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │  p  │ B   │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │ E   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │*    │*    │ E   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ F   │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
    // ,
    //   `
    //   ┌─────┬─────┬─────┬─────┬─────┬─────┐
    //   │ P   │  p  │     │     │     │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │  p  │  p  │ B   │     │ B   │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │ B   │ E   │*1   │*1   │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │     │     │  s  │  s  │ E   │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │     │     │ B   │>S   │  s  │     │
    //   ├─────┼─────┼─────┼─────┼─────┼─────┤
    //   │ F   │ E   │     │*1   │*1   │ B   │
    //   └─────┴─────┴─────┴─────┴─────┴─────┘
    // `
  );

  registerTest(
    `Missed tiles leading to only one pattern should auto-solve the full board`,
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │ E   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
    `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │>E   │  p  │  p  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │  p  │  p  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │  s  │  s  │  s  │ E   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │  s  │  s  │  s  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
  );

  // registerTest(
  //   `Suggested target should constrain itself to known patterns`,
  //   `
  //   ┌─────┬─────┬─────┬─────┬─────┬─────┐
  //   │     │     │     │     │  b  │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │     │     │  b  │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │     │     │     │ S   │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │     │     │  b  │     │     │
  //   └─────┴─────┴─────┴─────┴─────┴─────┘
  // `,
  //   `
  //   ┌─────┬─────┬─────┬─────┬─────┬─────┐
  //   │     │     │     │     │  b  │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │  s  │>S   │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │*1   │*1   │     │  b  │  s  │  s  │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │*1   │*1   │     │     │ S   │  s  │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │*1   │*1   │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │     │     │  b  │*1   │*1   │
  //   └─────┴─────┴─────┴─────┴─────┴─────┘
  // `
  // );

  // registerTest(
  //   `Suggestions should constrain themselves to known patterns`,
  //   `
  //   ┌─────┬─────┬─────┬─────┬─────┬─────┐
  //   │     │     │     │     │ B   │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │ P   │     │     │ B   │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ P   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │     │     │ B   │     │     │
  //   └─────┴─────┴─────┴─────┴─────┴─────┘
  // `,
  //   `
  //   ┌─────┬─────┬─────┬─────┬─────┬─────┐
  //   │     │     │     │     │ B   │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │*1  s│*1  s│
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │ P   │  p  │     │ B   │*2  s│*2  s│
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │  p  │ P   │     │*1  s│>S   │*4   │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │*1  s│*3  s│*3  s│
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │     │     │ B   │*1  s│*1  s│
  //   └─────┴─────┴─────┴─────┴─────┴─────┘
  // `
  // );

  // registerTest(
  //   `Shapes with smart-fill information (sword/presents) but no user-entered tiles for that shape should trigger suggestions within the smart-fill area`,
  //   `
  //   ┌─────┬─────┬─────┬─────┬─────┬─────┐
  //   │     │     │     │     │ B   │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │     │     │ B   │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ P   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │     │     │ B   │     │     │
  //   └─────┴─────┴─────┴─────┴─────┴─────┘
  // `,
  //   `
  //   ┌─────┬─────┬─────┬─────┬─────┬─────┐
  //   │     │     │     │     │ B   │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │>P   │  p  │     │ B   │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │  p  │ P   │     │     │*4   │*4   │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │ B   │     │     │     │     │
  //   ├─────┼─────┼─────┼─────┼─────┼─────┤
  //   │     │     │     │ B   │     │     │
  //   └─────┴─────┴─────┴─────┴─────┴─────┘
  // `
  // );
  /*
  test.skip(`Suggestions should be displayed correctly when two incomplete shapes are present due to user input`, async (args) => {
    await run(args,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ B   │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ P   │     │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ B   │     │.1  s│.2  s│*3  s│.2  s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │.1  s│.2  s│>S   │*3  s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │. 1 p│ P   │. 1 p│ B   │.2  s│.2  s│
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │. 1 p│  p  │. 1 p│     │.1  s│.1  s│
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
    );
  });
  */
};
