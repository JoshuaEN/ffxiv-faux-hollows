import { TestStructuralElements } from "../all-data-tests.js";
import { RegisterTest } from "../framework.js";

export const data = (
  registerTest: RegisterTest,
  { describe }: TestStructuralElements
) => {
  describe("Sword Smart-Fill", () => {
    registerTest(
      `Basic Test`,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │     │     │     │ B   │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │     │     │     │     │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │     │     │ B   │     │     │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `,
      `
      ┌─────┬─────┬─────┬─────┬─────┬─────┐
      │     │.  2 │. 1  │. 1  │ B   │.  2 │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  2 │ B   │. 1  │. 1  │. 12 │. 1  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │. 1  │* 2  │. 12 │ B   │. 1  │. 12 │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │. 1  │* 2  │* 2  │. 1  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │     │ B   │. 12 │. 1  │  s  │  s  │
      ├─────┼─────┼─────┼─────┼─────┼─────┤
      │.  2 │     │     │ B   │  s  │>S   │
      └─────┴─────┴─────┴─────┴─────┴─────┘
    `
    );
    registerTest(
      `Correctly smart fill based on diagonal data (3x2)`,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │ S   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │  s  │  s  │ S   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │  p  │>S   │  s  │  s  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │  p  │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
    );
    registerTest(
      `Correctly smart fill based on diagonal data (2x3)`,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │ S   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │*  1 │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │ S   │  s  │*  1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │  p  │     │  s  │  s  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │  p  │ B   │  s  │>S   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │*  1 │*  1 │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
    );
    registerTest(
      `Correctly smart fill based on a horizontal line with one side blocked`,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │     │ S   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │>S   │  s  │ S   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │  p  │  s  │  s  │  s  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │  p  │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
    );
    registerTest(
      `Correctly smart fill based on a vertical line with one side blocked`,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │     │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │ S   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │     │ B   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │     │     │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │*  1 │ B   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ B   │     │ S   │  s  │*  1 │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  p  │  p  │     │  s  │  s  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │ P   │  p  │ B   │>S   │  s  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ E   │     │*  1 │*  1 │ B   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `
    );
    registerTest(
      `Correctly smart fill against top-left edge`,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ P   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │ P   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │>S   │  s  │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  s  │  s  │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  s  │  s  │     │ P   │  p  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │  p  │ P   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
    [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
`
    );
    registerTest(
      `Correctly smart fill against top-right edge`,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ P   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ P   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │  s  │>S   │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │  s  │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │  p  │ P   │     │  s  │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ P   │  p  │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
    [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
`
    );
    registerTest(
      `Correctly smart fill against bottom-left edge`,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ P   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │     │ P   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ P   │  p  │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  s  │  s  │     │  p  │ P   │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │  s  │  s  │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │>S   │  s  │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
    [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
`
    );
    registerTest(
      `Correctly smart fill against bottom-right edge`,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ P   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ P   │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │     │     │
    └─────┴─────┴─────┴─────┴─────┴─────┘
  `,
      `
    ┌─────┬─────┬─────┬─────┬─────┬─────┐
    │     │     │     │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │  p  │ P   │     │     │     │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │ P   │  p  │     │  s  │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │ B   │ B   │  s  │  s  │
    ├─────┼─────┼─────┼─────┼─────┼─────┤
    │     │     │     │ B   │  s  │>S   │
    └─────┴─────┴─────┴─────┴─────┴─────┘
    [Warning] Blocked tile pattern does not match any known patterns; Fox suggestions are not available.
`
    );
  });
};
