@use "./scss/chip.scss";

:root {
  font-family: Arial, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  font-weight: 400;

  --font-color: #f5f5f5;
  --highlight-font-color: #ff9c4e;
  --muted-font-color: hsl(0, 0%, 82%);
  --page-background-color: #120d08;

  --standard-margin: 1rem;

  --board-tile-count: 6;
  --board-tile-max-gap: 0.5rem;
  --board-tile-min-gap: 0.25rem;
  /*
    1.25vw was roughly calculated by taking the maximum width of the board:
    (--tile-max-size * 6 + --board-tile-max-gap * 5 + padding [1rem * 2]) = 648px
    Then calculating what percent --board-tile-max-gap is of 648:
    --board-tile-max-gap / 648 * 100 = 1.234567890 (repeating)

    It was then rounded to 1.25 because that had a more visually stable resizing behavior.
  */
  --board-tile-gap: max(
    var(--board-tile-min-gap),
    min(min(1.25vw, 1.25vh), var(--board-tile-max-gap))
  );

  --board-unknown-color: var(--font-color);
  --board-unknown-background-color: hsl(31, 23%, 21%);
  --board-unknown-outline-color: hsl(31, 23%, 41%);

  --board-empty-color: hsl(31, 23%, 65%);
  --board-empty-background-color: var(--board-unknown-background-color);
  --board-empty-outline-color: var(--board-unknown-outline-color);

  --board-blocked-color: hsl(0, 0%, 55%);
  --board-blocked-background-color: hsl(0, 0%, 21%);
  --board-blocked-outline-color: hsl(0, 0%, 41%);

  --board-sword-color: var(--font-color);
  --board-sword-background-color: #2b4f8a;
  --board-sword-outline-color: hsl(217, 52%, 55%);

  --board-sword-suggestion-color: #1b2c49;
  --board-sword-suggestion-background-color: var(
    --board-sword-background-color
  );
  --board-sword-suggestion-outline-color: var(--board-sword-outline-color);

  --board-present-color: var(--font-color);
  --board-present-background-color: #89302d;
  --board-present-outline-color: hsl(2, 51%, 56%);

  --board-fox-color: var(--font-color);
  --board-fox-background-color: #694b1c;
  --board-fox-outline-color: hsl(37, 58%, 50%);

  --board-suggest-fox-color: var(--font-color);
  --board-suggest-fox-background-color: #9e009e;
  --board-suggest-fox-outline-color: hsl(300, 58%, 50%);

  --board-next-target-color: #ffd700;
  --board-next-target-background-color: var(--board-unknown-background-color);
  --board-next-target-outline-color: #ffd700;

  --tile-max-size: 6rem;
  --tile-min-size: 48px; // Based on Material touch target guidelines

  --tile-border-radius: 8px;

  --chip-background-color: #2f3d4e;
  --chip-color: var(--font-color);

  color-scheme: dark light;
  color: var(--font-color);
  background-color: var(--page-background-color);
  scrollbar-gutter: stable both-edges;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

.suggestionIndicator {
  top: 25%;
  left: 25%;
  height: 50%;
  width: 50%;
  color: #fff;
}

.Blocked,
.SmartFillBlocked {
  --tile-color: var(--board-blocked-color);
  --tile-background-color: var(--board-blocked-background-color);
  --tile-outline-color: var(--board-blocked-outline-color);
  color: var(--board-blocked-color);
  background-color: var(--tile-background-color);

  rect {
    fill: var(--tile-background-color);
  }
}
.Sword,
.SmartFillSword,
.SuggestSword {
  --tile-color: var(--board-sword-color);
  --tile-background-color: var(--board-sword-background-color);
  --tile-outline-color: var(--board-sword-outline-color);
  color: var(--board-sword-color);
  background-color: var(--tile-background-color);
}
.Present,
.SmartFillPresent,
.SuggestPresent {
  --tile-color: var(--board-present-color);
  --tile-background-color: var(--board-present-background-color);
  --tile-outline-color: var(--board-present-outline-color);
  color: var(--board-present-color);
  background-color: var(--tile-background-color);
}
.Fox {
  --tile-color: var(--board-fox-color);
  --tile-background-color: var(--board-fox-background-color);
  --tile-outline-color: var(--board-fox-outline-color);
  color: var(--board-fox-color);
  background-color: var(--tile-background-color);
}
.SuggestFox {
  --tile-color: var(--board-suggest-fox-color);
  --tile-background-color: var(--board-suggest-fox-background-color);
  --tile-outline-color: var(--board-suggest-fox-outline-color);
  color: var(--board-suggest-fox-color);
  background-color: var(--tile-background-color);
}
.SuggestFox-suggestion-indicator {
  color: var(--board-suggest-fox-background-color);
  top: 17%;
  left: 21.5%;
  height: 60%;
  width: 60%;
}

.Empty {
  --tile-color: var(--board-empty-color);
  --tile-background-color: var(--board-empty-background-color);
  --tile-outline-color: var(--board-empty-outline-color);
  color: var(--board-empty-color);
  background-color: var(--tile-background-color);
}

.Unknown {
  --tile-color: var(--board-unknown-color);
  --tile-background-color: var(--board-unknown-background-color);
  --tile-outline-color: var(--board-unknown-outline-color);
  color: var(--tile-color);
  background-color: var(--tile-background-color);
}

.SuggestSword,
.SuggestPresent {
  svg:not(.suggestionIndicator) {
    color: var(--tile-background-color);
    filter: brightness(50%);
  }
}

body {
  margin: 0;
  display: flex;
  justify-content: safe center;
  min-height: 100vh;
}

header {
  display: flex;
  gap: var(--standard-margin);
  justify-content: space-between;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
  margin-top: 0;
  margin-bottom: 0.5rem;
}

a {
  color: var(--highlight-font-color);

  &:hover {
    filter: brightness(120%);
  }
  &:active {
    filter: brightness(140%);
  }
}

.active-help em {
  color: var(--highlight-font-color);
}

button {
  border: 0px solid transparent;
  border-radius: var(--tile-border-radius);
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  cursor: pointer;
  outline: 0;

  &:disabled {
    cursor: default;
  }
}
button:hover:not(:disabled),
button:hover:focus:not(:disabled) {
  filter: brightness(140%);
  opacity: 1 !important;
}
button:focus:not(:disabled) {
  filter: brightness(120%);
  opacity: 1 !important;
}
button:not(:disabled).focused {
  filter: brightness(150%);
  opacity: 1 !important;
}

*:focus:not(:disabled),
*:focus-visible:not(:disabled),
button:not(:disabled).focused {
  outline: 3px solid var(--tile-outline-color, var(--font-color));
}

.hasIssue {
  outline: calc(var(--board-tile-gap) / 2) solid red;
}

.faded {
  filter: grayscale(1);
  opacity: 0.8;
}

#app {
  display: flex;
  flex-direction: column;
  --app-width: min(
    min(1280px, min(75vh, 95vw)),
    calc(var(--tile-max-size) * var(--board-tile-count)) +
      calc(var(--board-tile-max-gap) * (calc(var(--board-tile-count) - 1)))
  );
  width: var(--app-width);
  margin: var(--standard-margin);
  margin-top: 3rem;
}

figure {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0;
}
figcaption {
  text-align: center;
}

img.in-game-tile-example,
.in-this-tool-tile-example {
  border-radius: 10px;
  padding: 5px;
}
img.in-game-tile-example {
  background-color: #312012;
}
.in-this-tool-tile-example {
  background-color: var(--page-background-color);
  --tile-max-size: 52px;
  --tile-min-size: 52px;
}

.button {
  cursor: pointer;

  &:focus:not(:disabled),
  &:hover:focus:not(:disabled) {
    outline: none;
    border-width: 2px;
    filter: brightness(140%);
  }

  &:hover:not(:disabled) {
    filter: brightness(120%);
  }
}

@media (width < 570px) {
  #app {
    margin-top: var(--standard-margin);
  }
  h1 {
    width: min-content;
  }
}
